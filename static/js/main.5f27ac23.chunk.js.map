{"version":3,"sources":["components/Square.jsx","components/SquareBatch.jsx","components/SquaresDisplay.jsx","components/TaskSquare.jsx","components/TaskSquareDay.jsx","App.js","serviceWorker.js","index.js"],"names":["Square","props","className","style","data","scalar","SquareBatch","map","d","i","key","label","SquaresDisplay","console","assert","squares_data","length","log","modified_seq","Array","Date","getDay","fill","concat","idx","arr","push","row","reduce","a","c","Math","max","Infinity","DateTime","now","minus","weeks","startOf","toFormat","TaskSquare","useState","textstuff2","count","setCount","onClick","textstuff3","minWidth","minHeight","backgroundColor","colors","textstuff","TaskSquareDay","buttons","counts","x","current","marginTop","maxWidth","attrs","num","updateTodayCounts","prototype","getWeek","onejan","this","getFullYear","ceil","App","setCounts","thing","random","flat","borderRadius","marginBottom","fontSize","lineHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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AAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,UAAoB,CAAE,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,SAAoB,EAAAxC,KAAKwC,WAAsBC,OAC5oH,OACI,yBAAKtE,UAAU,gFAClB,yBAAKA,UAAU,0DAAf,iBAIG,yBAAKA,UAAU,sDACX,yBAAKA,UAAU,sCAAsCC,MAAO,CAACsE,aAAc,OAAWf,SAAU,QAAYgB,aAAc,QAAUjB,UAAW,UAC3I,uBAAGvD,UAAU,eAAb,kBACA,yBAAKA,UAAU,iLAAiLC,MAAO,CAACwE,SAAU,MAAUC,WAAY,IAC9OtB,EAAO1B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAAM,EAAI,GAAK,MAIhD,yBAAK5B,UAAU,eAAc,8BAChC,kBAACkD,EAAD,CAAeS,kBAAmBQ,IAClC,yBAAKnE,UAAU,UAClB,yBAAKA,UAAU,kDAAkDC,MAAO,CAACuD,SAAU,UAC/E,kBAAC9C,EAAD,CAAgBG,aAAcuD,QCnBhBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMC,a","file":"static/js/main.5f27ac23.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Square(props) {\n    return <div className=\"w-12 h-12 m-1 rounded-md\" style={{\"backgroundColor\": `rgba(29, 88, 216, ${props.data / props.scalar})`}}></div>\n}\n\n","import React from 'react';\nimport Square from './Square.jsx';\n\nexport default function SquareBatch(props) {\n    return <div className=\"flex justify-center flex-grow w-full h-12 flex-row-reverse\">\n        {props.data.map((d, i) => <Square scalar={props.scalar} key={i} data={d}></Square>)}\n        {props.label ? <span className=\"justify-right inline-block align-center text-right p-3 font-mono align-middle text-gray-600 h-10\">{props.label}</span> : <></>}\n    </div>\n}\n","import React from 'react';\nimport SquareBatch from './SquareBatch.jsx';\nimport { DateTime } from 'luxon';\n\nexport default function SquaresDisplay(props) {\n    console.assert(props.squares_data.length > 0);\n    console.log()\n\n    // spaghet ahead: bunching iterators\n    let modified_seq = Array(6- new Date().getDay()).fill(0).concat(props.squares_data);\n    const squares_data = [];\n    let idx = 0;\n    while (idx < modified_seq.length) {\n        let arr = [];\n        for (let i=0; i<7; i++) {\n            if (idx + i < modified_seq.length) \n                arr.push(modified_seq[idx + i]);\n        }\n        squares_data.push(arr)\n        idx += 7;\n    }\n    return <div className=\"flex flex-wrap w-shrink inline-block m-auto rounded-lg space-around p-4 bg-grey-700 space-y-2\">\n        {squares_data.map((row, i) => <SquareBatch data={row} scalar={props.squares_data.reduce((a, c) => Math.max(a, c), -Infinity)} label={DateTime.now().minus({weeks: i}).startOf('week').toFormat('MMM dd')} key={i} />)}\n        </div>\n}\n\n","import React, { useState } from 'react';\n\nexport default function TaskSquare(props) {\n    const [ count, setCount ] = useState(props.textstuff2);\n\n    return <button onClick={() => {setCount((count + 1) % (props.textstuff3 + 1)); props.setCount((count + 1) % (props.textstuff3 + 1))}} className=\"m-5 rounded-lg text-center text-gray-300 font-bold\" style={{minWidth: 8+\"rem\",\n\t\t\t\t\t\t\t\t\t\t\t minHeight: 7.3+\"rem\",\n\t\t\t\t\t\t\t\t\t\t\t backgroundColor: \"rgba(\" + props.colors[0] + \",\"+props.colors[1]+\",\" + props.colors[2] + ',' + (0.1 + count / props.textstuff3 * 0.9) + \")\"}}>\n\t       <div className=\"mt-1 font-extrabold\">{props.textstuff}</div>\n\t       <div className=\"font-mono mt-2 text-4xl\">{count+'/'+props.textstuff3}</div>\n\t   </button>\n}\n\n","import React from 'react';\nimport TaskSquare from './TaskSquare'\n\nexport default function TaskSquareDay(props) {\n    const buttons = [\n        {'name': \"Brush Teeth\", \"current\": 1, \"needed\": 2, 'colors': [37, 99, 235]},\n        {'name': \"Burrie Body\", \"current\": 0, \"needed\": 1, 'colors': [218, 72, 5]},\n        {'name': \"Meditate\", \"current\": 1, \"needed\": 1, 'colors': [134, 35, 171]},\n    ]\n    const counts = [...buttons.map(x => x.current)];\n    console.log('hrrrrrrrrrrrrrrrrrrrrrrrrr')\n    return <div className=\"flex w-5/6 py-0 px-0 m-auto bg-gray-800 rounded-2xl flex-wrap items-baseline\" style={{marginTop: -20+\"px\", maxWidth: 507+'px'}}>\n        {\n            buttons.map((attrs, i) => {\n                return <TaskSquare textstuff={attrs['name']} textstuff2={attrs['current']} setCount={(num) => { counts[i] = num; console.log(counts); props.updateTodayCounts(counts); }} textstuff3={attrs['needed']} colors={attrs['colors']} key={i} />\n            })\n        }\n\t   </div>\n}\n    \n","import React, { useState } from 'react';\nimport SquaresDisplay from './components/SquaresDisplay'\nimport TaskSquareDay from './components/TaskSquareDay'\n\n// https://stackoverflow.com/a/7765814/10372825\n Date.prototype.getWeek = function() {\n    var onejan = new Date(this.getFullYear(), 0, 1);\n    return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n}\n\nfunction App() {\n    const [ counts, setCounts ] = useState([]);\n    const thing = [[(5), (3), (4), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], [(Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1)), (Math.random() * (7-1))], ].flat();\n    return (\n        <div className=\"fixed relative flex flex-col w-screen h-screen overflow-x-hidden bg-gray-900\">\n\t    <div className=\"text-gray-500 mt-2 font-extrabold text-5xl text-center\">MOGUS TRACKER</div>\n        {/*<div className=\"items-center justify-center font-mono text-4xl border-2 max-w-prose\">\n                Hew\n            </div>*/}\n        <div className=\"font-mono text-2xl text-gray-300 h-96 align-center\">\n            <div className=\"w-2/3 py-12 m-auto mt-5 bg-gray-800\" style={{borderRadius: 70 + 'px', maxWidth: 349 + 'px', marginBottom: -20+\"px\", marginTop: -20+\"px\"}}>\n                <p className=\"text-center\">Current Streak</p>\n                <div className=\"content-center justify-center m-auto font-mono font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-tr from-blue-800 to-purple-400 align-center rounded-3xl\" style={{fontSize: 8 + \"em\", lineHeight: 1}}>\n        { counts.reduce((a, c) => a + c, 0) >= 3 ? 12 : 11 }\n                </div>\n            </div>\n        </div>\n        <div className=\"w-2 text-xl\"><br/></div>\n\t    <TaskSquareDay updateTodayCounts={setCounts}/>\n\t    <div className=\"w-full\">\n\t\t<div className=\"w-5/6 pb-12 m-auto mt-8 bg-gray-800 rounded-2xl\" style={{maxWidth: 507+'px'}}>\n\t\t    <SquaresDisplay squares_data={thing}></SquaresDisplay>\n\t\t</div>\n\t    </div>\n\t</div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}